<!DOCTYPE html>
<html lang="en" class="no-js">
<head>
  <meta charset="UTF-8">
  <title>Launchbox</title>

  <meta name="viewport" content="width=device-width,initial-scale=1.0">

  <script src="/scripts/modernizr.min.js"></script>

  <!--[if (lt IE 9) & (!IEMobile)]>
    <link href="/stylesheets/styles--no-mq.css" rel="stylesheet">
  <![endif]-->
  <!--[if (gte IE 9) | (IEMobile)]><!-->
    <link href="/stylesheets/styles.css" rel="stylesheet">
  <!--<![endif]-->

  <!-- for metro tiles -->
  <meta name="msapplication-TileColor" content="#e1e1e1">
  <meta name="msapplication-TileImage" content="/favicon-144.png">

  <link rel="apple-touch-icon-precomposed" sizes="152x152" href="/favicon-152.png">
  <link rel="icon" sizes="32x32"   href="/favicon-32.png">
  <link rel="icon" sizes="16x16"   href="/favicon-16.png">

</head>
<body>

  <%= yield %>

  <script>
    /* yes, I'm just writing the scripts down in the footer. deal with it, butthead. */

    function addEventListener(el, eventName, handler) {
      if (el.addEventListener) {
        el.addEventListener(eventName, handler);
      } else {
        el.attachEvent('on' + eventName, function(){
          handler.call(el);
        });
      }
    }

    // This wrapper prevents variables
    // from being placed on `window`
    (function(){

      // maybe a bad idea? Iunno.
      // U for utilities
      window.U = {};

      window.U.toggleClass = function(el, className) {
        if (el.classList) {
          el.classList.toggle(className);
        } else {
          var classes = el.className.split(' ');
            var existingIndex = -1;
            for (var i = classes.length; i--;) {
              if (classes[i] === className)
                existingIndex = i;
            }

            if (existingIndex >= 0)
              classes.splice(existingIndex, 1);
            else
              classes.push(className);

          el.className = classes.join(' ');
        }
      };

      window.U.toggleAttr = function(el, attr) {
        var newState = !(el.getAttribute(attr) === 'true')
        el.setAttribute(attr, newState);
        return newState;
      };

      // maybe also a bad idea?
      // caches reused dom elements
      window.cache = {};

      window.cache.editTrigger = document.getElementById('edit-trigger');
      window.cache.boxList = document.getElementById('box-list');

      addEventListener(window.cache.editTrigger, 'touchend', function(e){
        e.preventDefault();

        U.toggleAttr(window.cache.editTrigger, 'aria-checked');
        U.toggleClass(window.cache.boxList, 'box--is-in-edit-mode');
      });
      addEventListener(window.cache.editTrigger, 'click', function(e){
        U.toggleAttr(window.cache.editTrigger, 'aria-checked');
        U.toggleClass(window.cache.boxList, 'box--is-in-edit-mode');
      });
      addEventListener(window.cache.editTrigger, 'mouseout', function(e){
        // get rid of the blur leftover from clicking button element.
        // is this bad for a11y?
        this.blur()
      });

    })();

  </script>

  <script>
    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
    })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

    ga('create', 'UA-63535874-1', 'auto');
    ga('send', 'pageview');

  </script>
</body>
</html>
